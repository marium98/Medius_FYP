{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\Medius\\\\FYP\\\\node_modules\\\\react-navigation-header-buttons\\\\src\\\\HeaderButton.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableItem from \"./TouchableItem\";\nvar BUTTON_HIT_SLOP = Object.freeze({\n  top: 5,\n  bottom: 5,\n  left: 5,\n  right: 5\n});\nexport function HeaderButton(props) {\n  var onPress = props.onPress,\n      style = props.style,\n      renderButtonElement = props.renderButtonElement,\n      background = props.background,\n      iconName = props.iconName,\n      title = props.title,\n      buttonStyle = props.buttonStyle,\n      IconComponent = props.IconComponent,\n      iconSize = props.iconSize,\n      color = props.color,\n      other = _objectWithoutProperties(props, [\"onPress\", \"style\", \"renderButtonElement\", \"background\", \"iconName\", \"title\", \"buttonStyle\", \"IconComponent\", \"iconSize\", \"color\"]);\n\n  var ButtonElement = renderButtonElement({\n    iconName: iconName,\n    title: title,\n    buttonStyle: buttonStyle,\n    IconComponent: IconComponent,\n    iconSize: iconSize,\n    color: color\n  });\n  return React.createElement(TouchableItem, _extends({\n    borderless: true,\n    onPress: onPress,\n    hitSlop: BUTTON_HIT_SLOP,\n    rippleRadius: 20,\n    style: StyleSheet.compose(styles.buttonContainer, style)\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, ButtonElement));\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/Medius/FYP/node_modules/react-navigation-header-buttons/src/HeaderButton.js"],"names":["React","TouchableItem","BUTTON_HIT_SLOP","Object","freeze","top","bottom","left","right","HeaderButton","props","onPress","style","renderButtonElement","background","iconName","title","buttonStyle","IconComponent","iconSize","color","other","ButtonElement","StyleSheet","compose","styles","buttonContainer","create","alignItems","justifyContent"],"mappings":";;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,aAAP;AAGA,IAAMC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,MAAM,EAAE,CAAlB;AAAqBC,EAAAA,IAAI,EAAE,CAA3B;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CAAd,CAAxB;AA+BA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAgD;AAAA,MAEnDC,OAFmD,GAajDD,KAbiD,CAEnDC,OAFmD;AAAA,MAGnDC,KAHmD,GAajDF,KAbiD,CAGnDE,KAHmD;AAAA,MAInDC,mBAJmD,GAajDH,KAbiD,CAInDG,mBAJmD;AAAA,MAKnDC,UALmD,GAajDJ,KAbiD,CAKnDI,UALmD;AAAA,MAMnDC,QANmD,GAajDL,KAbiD,CAMnDK,QANmD;AAAA,MAOnDC,KAPmD,GAajDN,KAbiD,CAOnDM,KAPmD;AAAA,MAQnDC,WARmD,GAajDP,KAbiD,CAQnDO,WARmD;AAAA,MASnDC,aATmD,GAajDR,KAbiD,CASnDQ,aATmD;AAAA,MAUnDC,QAVmD,GAajDT,KAbiD,CAUnDS,QAVmD;AAAA,MAWnDC,KAXmD,GAajDV,KAbiD,CAWnDU,KAXmD;AAAA,MAYhDC,KAZgD,4BAajDX,KAbiD;;AAerD,MAAMY,aAAa,GAAGT,mBAAmB,CAAC;AACxCE,IAAAA,QAAQ,EAARA,QADwC;AAExCC,IAAAA,KAAK,EAALA,KAFwC;AAGxCC,IAAAA,WAAW,EAAXA,WAHwC;AAIxCC,IAAAA,aAAa,EAAbA,aAJwC;AAKxCC,IAAAA,QAAQ,EAARA,QALwC;AAMxCC,IAAAA,KAAK,EAALA;AANwC,GAAD,CAAzC;AAQA,SACE,oBAAC,aAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,OAAO,EAAET,OAFX;AAGE,IAAA,OAAO,EAAET,eAHX;AAIE,IAAA,YAAY,EAAE,EAJhB;AAKE,IAAA,KAAK,EAAEqB,UAAU,CAACC,OAAX,CAAmBC,MAAM,CAACC,eAA1B,EAA2Cd,KAA3C;AALT,KAMMS,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,aAAP,CARF,CADF;AAYD;AAED,IAAMG,MAAM,GAAGF,UAAU,CAACI,MAAX,CAAkB;AAC/BD,EAAAA,eAAe,EAAE;AACfE,IAAAA,UAAU,EAAE,QADG;AAEfC,IAAAA,cAAc,EAAE;AAFD;AADc,CAAlB,CAAf","sourcesContent":["/**\n * @flow\n */\nimport * as React from 'react';\nimport { StyleSheet, View, TouchableWithoutFeedback } from 'react-native';\nimport TouchableItem from './TouchableItem';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst BUTTON_HIT_SLOP = Object.freeze({ top: 5, bottom: 5, left: 5, right: 5 });\n\n// for renderVisibleButton() function\nexport type VisibleButtonProps = {|\n  IconComponent?: React.ComponentType<any>,\n  iconSize?: number,\n  color?: string,\n  iconName?: string,\n  title: string,\n  buttonStyle?: ViewStyleProp,\n|};\n\n// from <Item />\nexport type ItemProps = {|\n  ...$Exact<React.ElementConfig<typeof TouchableWithoutFeedback>>,\n  ...VisibleButtonProps,\n  onPress: ?() => any,\n  style?: ViewStyleProp,\n|};\n\ntype OtherProps = {|\n  background?: any,\n  foreground?: any,\n  renderButtonElement: (VisibleButtonProps) => React.Element<any>,\n|};\n\nexport type HeaderButtonProps = {|\n  ...ItemProps,\n  ...OtherProps,\n|};\n\nexport function HeaderButton(props: HeaderButtonProps) {\n  const {\n    onPress,\n    style,\n    renderButtonElement,\n    background,\n    iconName,\n    title,\n    buttonStyle,\n    IconComponent,\n    iconSize,\n    color,\n    ...other\n  } = props;\n\n  const ButtonElement = renderButtonElement({\n    iconName,\n    title,\n    buttonStyle,\n    IconComponent,\n    iconSize,\n    color,\n  });\n  return (\n    <TouchableItem\n      borderless\n      onPress={onPress}\n      hitSlop={BUTTON_HIT_SLOP}\n      rippleRadius={20}\n      style={StyleSheet.compose(styles.buttonContainer, style)}\n      {...other}\n    >\n      <View>{ButtonElement}</View>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}